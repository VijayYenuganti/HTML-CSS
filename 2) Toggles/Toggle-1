<!-- Actually should use java script to do it but domenstriation i just used it to the background -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Specifies the character encoding for the HTML document -->
    <meta charset="UTF-8" />
    <!-- Sets the viewport to ensure the website is responsive on different devices -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- Sets the title of the webpage -->
    <title>Toggle</title>

    <style>
      /* Styles for the body element */
      body {
        margin: 0; /* Removes default margin */
        height: 100vh; /* Sets height to full viewport height */
        width: 100vw; /* Sets width to full viewport width */
        display: flex; /* Uses flexbox for layout */
        justify-content: center; /* Centers content horizontally */
        align-items: center; /* Centers content vertically */
        flex-direction: column; /* Stacks children elements vertically */
      }

      /* Styles for the label element */
      label {
        width: 500px; /* Sets width */
        height: 200px; /* Sets height */
        position: relative; /* Positions child elements relative to this element */
        display: block; /* Makes the element a block-level element */
        background: #ebebeb; /* Sets background color */
        border-radius: 200px; /* Rounds the corners */
        box-shadow: inset 0px 5px 15px rgba(0, 0, 0, 0.4),
                    inset 0px -5px 15px rgba(255, 255, 255, 0.4); /* Adds inner shadows */
        cursor: pointer; /* Changes cursor to pointer when hovering */
        transition: 0.3s; /* Adds a transition effect */
      }

      /* Styles for the pseudo-element after the label */
      label:after {
        content: ""; /* Empty content */
        width: 180px; /* Sets width */
        height: 180px; /* Sets height */
        position: absolute; /* Positions relative to the label */
        top: 10px; /* Sets top position */
        left: 10px; /* Sets left position */
        background: linear-gradient(180deg, #ffcc89, #d8860b); /* Adds gradient background */
        border-radius: 180px; /* Rounds the corners */
        box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.2); /* Adds shadow */
        transition: 0.3s; /* Adds a transition effect */
      }

      /* Styles for the input element */
      input {
        width: 0; /* Sets width to 0 */
        height: 0; /* Sets height to 0 */
        visibility: hidden; /* Hides the input */
      }

      /* Styles for the label when the input is checked */
      input:checked + label {
        background-color: #242424; /* Changes background color */
      }
      /* Styles for the pseudo-element after the label when the input is checked */
      input:checked + label:after {
        left: 490px; /* Moves the pseudo-element to the right */
        transform: translateX(-100%); /* Transforms the position */
        background: linear-gradient(180deg, #777, #3a3a3a); /* Changes background gradient */
      }

      /* Styles for the pseudo-element after the label when active */
      label:active:after {
        width: 260px; /* Increases the width */
      }

      /* Styles for the background div */
      .background {
        width: 100vw; /* Sets width to full viewport width */
        height: 100vh; /* Sets height to full viewport height */
        background: #fff; /* Sets background color */
        z-index: -1; /* Sends the background behind other elements */
        position: absolute; /* Positions relative to the viewport */
        transition: 0.3s; /* Adds a transition effect */
      }

      /* Styles for the background div when the input is checked */
      input:checked + label + .background {
        background: #242424; /* Changes background color */
      }

      /* Styles for the images inside the label */
      label img {
        position: absolute; /* Positions relative to the label */
        width: 120px; /* Sets width */
        top: 40px; /* Sets top position */
        z-index: 100; /* Positions above other elements */
      }

      /* Styles for the sun image */
      label img.sun {
        left: 40px; /* Sets left position */
        fill: #fff; /* Sets fill color */
        transition: 0.3s; /* Adds a transition effect */
      }

      /* Styles for the moon image */
      label img.moon {
        left: 340px; /* Sets left position */
        fill: #7e7e7e; /* Sets fill color */
        transition: 0.3s; /* Adds a transition effect */
      }

      /* Styles for the sun image when the input is checked */
      input:checked + label img.sun {
        fill: #7e7e7e; /* Changes fill color */
      }

      /* Styles for the moon image when the input is checked */
      input:checked + label img.moon {
        fill: #7e7e7e; /* Changes fill color */
      }
    </style>
  </head>
  <body>
    <!-- Checkbox input for toggling dark mode -->
    <input type="checkbox" name="" id="darkmode-toggle" />
    <!-- Label for the checkbox, acting as the toggle switch -->
    <label for="darkmode-toggle">
      <!-- Sun icon for light mode -->
      <img src="sun.svg" alt="Sun-Mode" class="sun" />
      <!-- Moon icon for dark mode -->
      <img src="moon-stars-.svg" alt="Dark-Mode" class="moon" />
    </label>

    <!-- Background element that changes color when dark mode is toggled -->
    <div class="background"></div>
  </body>
</html>
